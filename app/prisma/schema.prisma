generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model member {
  memberID          String              @id @db.Uuid
  email             String?             @unique
  name              String
  password          String
  isOrg             Boolean?            @default(false)
  profile           profile?
  profile_picture   profile_picture[]   @ignore
  security_question security_question[]
  user_tag          user_tag[]
}

model security_question {
  id       String @id @db.Uuid
  memberID String @db.Uuid
  question String
  answer   String
  member   member @relation(fields: [memberID], references: [memberID], onDelete: Cascade)
}

model profile {
  memberID       String   @id @db.Uuid
  name           String
  country        String
  address        String
  occupationTags String[]
  bio            String?
  member         member   @relation(fields: [memberID], references: [memberID], onDelete: Cascade)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model profile_picture {
  memberID String? @db.Uuid
  image    Bytes?
  member   member? @relation(fields: [memberID], references: [memberID], onDelete: Cascade)

  @@ignore
}

model tag {
  tagID    Int        @id @default(autoincrement())
  tagName  String
  user_tag user_tag[]
}

model user_tag {
  memberID String @db.Uuid
  tagID    Int
  member   member @relation(fields: [memberID], references: [memberID], onDelete: Cascade)
  tag      tag    @relation(fields: [tagID], references: [tagID], onDelete: Cascade)

  @@id([tagID, memberID])
}
